
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2020-1-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2020-1-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2020-1-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2020-1-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-31'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-19'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-18'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-17'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-16'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-15'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-14'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-13'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-12'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-11'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-10'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-9'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-8'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-7'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-6'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-5'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-12-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-19'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-18'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-17'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-16'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-15'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-14'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-13'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-12'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-11'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-10'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-9'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-8'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-7'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-6'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-5'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-11-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-31'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-19'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-18'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-17'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-16'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-15'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-14'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-13'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-12'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-11'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-10'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-9'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-8'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-7'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-6'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-5'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-10-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-19'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-18'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-17'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-16'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-15'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-14'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-13'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-12'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-11'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-10'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-9'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-8'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-7'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-6'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-5'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-9-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-31'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-19'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-18'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-17'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-16'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-15'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-14'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-13'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-12'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-11'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-10'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-9'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-8'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-7'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-6'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-5'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-8-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-31'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-19'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-18'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-17'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-16'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-15'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-14'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-13'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-12'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-11'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-10'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-9'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-8'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-7'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-6'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-5'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;
   insert into midata.mi_visit_agg_1d_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  ch_start_date ,  timestamp ,  visit_count ,  customer_count ,  device_uuid_count ,  action_count ,  http_count ,  http_error_count ,  crash_count ,  anr_count ,  slow_count ,  http_third_count  )  SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            ch_start_date,            toUInt64((intDiv(timestamp + ((60000 * 60) * 8), (60000 * 60) * 24) * ((60000 * 60) * 24)) - ((60000 * 60) * 8)) AS timestamp,            uniqMergeState(visit_count) AS visit_count,            uniqMergeState(customer_count) AS customer_count,            uniqMergeState(device_uuid_count) AS device_uuid_count,            sumMergeState(action_count) AS action_count,            sumMergeState(http_count) AS http_count,            sumMergeState(http_error_count) AS http_error_count,            sumMergeState(crash_count) AS crash_count,            sumMergeState(anr_count) AS anr_count,            sumMergeState(slow_count) AS slow_count,            sumMergeState(http_third_count) AS http_third_count  FROM midata.`.inner.mi_visit_agg_1d_local_bak_1108`  
 where ch_start_date='2019-7-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, ch_start_date, timestamp;

