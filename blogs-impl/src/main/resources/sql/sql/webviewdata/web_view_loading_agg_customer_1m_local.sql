
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2020-1-4'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2020-1-3'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2020-1-2'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2020-1-1'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-31'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-30'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-29'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-28'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-27'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-26'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-25'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-24'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-23'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-22'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-21'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;
insert into  webviewdata.web_view_loading_agg_customer_1m_local (  app_id ,  app_version_id ,  os_id ,  device_id ,  country_id ,  region_id ,  city_id ,  carrier_id ,  customer_name ,  device_uuid ,  host ,  path ,  ch_start_date ,  timestamp ,  visit_count ,  action_count ,  redirect_duration ,  cache_duration ,  dns_duration ,  tcp_duration ,  request_duration ,  response_duration ,  process_duration ,  load_duration ,  white_screen_duration ,  page_loading_duration ,  slow_count ,  total_count ,  normal_count  ) SELECT            app_id,            app_version_id,            os_id,            device_id,            country_id,            region_id,            city_id,            carrier_id,            customer_name,            device_uuid,            host,            path,            ch_start_date,            toUInt64(intDiv(timestamp, 60000) * 60000) AS timestamp,            uniqState(visit_id) AS visit_count,            uniqState(action_id) AS action_count,            avgState(redirect_end_time - redirect_start_time) AS redirect_duration,            avgState(domainlookup_start_time - fetch_start_time) AS cache_duration,            avgState(domainlookup_end_time - domainlookup_start_time) AS dns_duration,            avgState(connect_end_time - connect_start_time) AS tcp_duration,            avgState(response_start_time - request_start_time) AS request_duration,            avgState(response_end_time - response_start_time) AS response_duration,            avgState(domcomplete_time - domloading_time) AS process_duration,            avgState(loadevent_end_time - loadevent_start_time) AS load_duration,            avgState(domloading_time) AS white_screen_duration,            avgState(loadevent_end_time) AS page_loading_duration,            sumState(is_slow) AS slow_count,            countState() AS total_count,            countIfState(is_slow = 0) AS normal_count    FROM webviewdata.`.inner.web_view_loading_local`    
 where ch_start_date='2019-12-20'
GROUP BY app_id, app_version_id, os_id, device_id, country_id, region_id, city_id, carrier_id, customer_name, device_uuid, host, path, ch_start_date, timestamp;

